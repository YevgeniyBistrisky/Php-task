services:
  app:
    container_name: ${APP_NAME}.service.app
    build:
      context: ./docker/php
      args:
        TIMEZONE: ${TIMEZONE}
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - database
    working_dir: /var/www/app
    volumes:
      - .:/var/www/app
    networks:
      - app_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    container_name: ${APP_NAME}.service.nginx
    restart: unless-stopped
    build:
      context: ./docker/nginx
    env_file:
      - .env
    depends_on:
      - app
    volumes:
      - .:/var/www/app
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./var/log/nginx:/var/log/nginx
      - ./docker/nginx/ssl:/var/www/ssl
    ports:
      - ${NGINX_HTTP_PORTS}
      - ${NGINX_HTTPS_PORTS}
    networks:
      - app_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  database:
    container_name: ${APP_NAME}.service.db
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_DB_NAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER}
      TZ: ${TIMEZONE}
    ports:
      - ${DATABASE_PORTS}
    volumes:
      - ./.db-data:/var/lib/postgresql/data:rw
    networks:
      - app_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    container_name: ${APP_NAME}.service.redis
    image: redis:5
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - app_network
    volumes:
      - redis_data:/data
    command: [ "redis-server", "--appendonly", "yes" ]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  redis_data:

networks:
  app_network:
